<#  Quick "does it boot & return 200?" check.  #>`nSet-StrictMode -Version Latest`n`$ErrorActionPreference = "Stop"`n`nfunction Get-PoetryExe {`n    `$p = Get-Command poetry -ErrorAction SilentlyContinue | Select -Expand Source -First 1`n    if (-not `$p) {`n        `$cand = @(`n            "`$env:LOCALAPPDATA\pypoetry\bin\poetry.exe",`n            "`$env:USERPROFILE\AppData\Roaming\Python\Scripts\poetry.exe"`n        ) | Where-Object { Test-Path `$_ }`n        if (`$cand) { `$p = `$cand[0] }`n    }`n    if (-not `$p) { throw "Poetry not found." }`n    return `$p`n}`n`n`$poetry = Get-PoetryExe`nWrite-Host "Using Poetry at `$poetry"`n`nif (-not (Test-Path ".env")) { throw ".env missing. Copy .env.example first." }`n`n# start backend`n`$proc = Start-Process -FilePath `$poetry -ArgumentList @("run","uvicorn","app.main:app","--port","8000","--log-level","warning") -WindowStyle Hidden -PassThru`nStart-Sleep -Seconds 4`n`ntry {`n    `$r = Invoke-WebRequest -Uri "http://127.0.0.1:8000/sheets/dashboard" -UseBasicParsing -TimeoutSec 5`n    if (`$r.StatusCode -ne 200) { throw "Endpoint returned `$`(`$r.StatusCode)" }`n    Write-Host "Smoke test OK (HTTP 200)"`n} finally {`n    if (`$proc -and -not `$proc.HasExited) { `$proc | Stop-Process }`n}